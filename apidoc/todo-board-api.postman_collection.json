{
  "info": {
    "_postman_id": "8f7e9b2d-5a1e-4c8e-9f3a-6b8f9c2d5a1e",
    "name": "Todo Board API",
    "description": "Collection for testing the Todo Board API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            },
            "description": "Authenticate a user and get a JWT token"
          },
          "response": []
        },
        {
          "name": "Register",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"securePassword123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            },
            "description": "Register a new user"
          },
          "response": []
        }
      ],
      "description": "Authentication endpoints"
    },
    {
      "name": "Tasks",
      "item": [
        {
          "name": "Get All Tasks",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/todos/all?page=0&size=10&sort=dueDate,desc",
              "host": ["{{baseUrl}}"],
              "path": ["todos", "all"],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                },
                {
                  "key": "sort",
                  "value": "dueDate,desc"
                }
              ]
            },
            "description": "Get all tasks with pagination and sorting"
          },
          "response": []
        },
        {
          "name": "Search Tasks",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"page\": {\n    \"page\": 0,\n    \"size\": 10,\n    \"sort\": [\n      {\n        \"property\": \"dueDate\",\n        \"direction\": \"desc\"\n      }\n    ]\n  },\n  \"title\": {\n    \"text\": \"login\",\n    \"exactMatch\": false\n  },\n  \"statuses\": [\"IN_PROGRESS\", \"REVIEW\"],\n  \"assigneeId\": \"123456789\",\n  \"tagIds\": [\"dev\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/todos/all",
              "host": ["{{baseUrl}}"],
              "path": ["todos", "all"]
            },
            "description": "Search tasks with complex filtering"
          },
          "response": []
        },
        {
          "name": "Get Board Tasks",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/todos/board?page=0&size=10",
              "host": ["{{baseUrl}}"],
              "path": ["todos", "board"],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                }
              ]
            },
            "description": "Get tasks for the board view (excluding backlog)"
          },
          "response": []
        },
        {
          "name": "Get Backlog Tasks",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/todos/backlog?page=0&size=10",
              "host": ["{{baseUrl}}"],
              "path": ["todos", "backlog"],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                }
              ]
            },
            "description": "Get tasks in the backlog"
          },
          "response": []
        },
        {
          "name": "Get Tasks by Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/todos/todo/status/IN_PROGRESS?page=0&size=10",
              "host": ["{{baseUrl}}"],
              "path": ["todos", "todo", "status", "IN_PROGRESS"],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                }
              ]
            },
            "description": "Get tasks by status"
          },
          "response": []
        },
        {
          "name": "Create Task",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Implement login page\",\n  \"description\": \"Create a login page with email and password fields\",\n  \"dueDate\": \"2023-12-31T00:00:00Z\",\n  \"status\": \"BACKLOG\",\n  \"assignee\": {\n    \"id\": \"123456789\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"dev\"\n    },\n    {\n      \"id\": \"design\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/todos/todo",
              "host": ["{{baseUrl}}"],
              "path": ["todos", "todo"]
            },
            "description": "Create a new task"
          },
          "response": []
        },
        {
          "name": "Update Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 1,\n  \"title\": \"Implement login page\",\n  \"description\": \"Create a login page with email and password fields\",\n  \"dueDate\": \"2023-12-31T00:00:00Z\",\n  \"status\": \"IN_PROGRESS\",\n  \"assignee\": {\n    \"id\": \"123456789\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"dev\"\n    },\n    {\n      \"id\": \"design\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/todos/todo",
              "host": ["{{baseUrl}}"],
              "path": ["todos", "todo"]
            },
            "description": "Update an existing task"
          },
          "response": []
        },
        {
          "name": "Get Task by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/todos/todo/1",
              "host": ["{{baseUrl}}"],
              "path": ["todos", "todo", "1"]
            },
            "description": "Get a task by ID"
          },
          "response": []
        },
        {
          "name": "Delete Task",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/todos/todo/1",
              "host": ["{{baseUrl}}"],
              "path": ["todos", "todo", "1"]
            },
            "description": "Delete a task"
          },
          "response": []
        }
      ],
      "description": "Task management endpoints"
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            },
            "description": "Get all users"
          },
          "response": []
        },
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/user/profile",
              "host": ["{{baseUrl}}"],
              "path": ["user", "profile"]
            },
            "description": "Get the authenticated user's profile"
          },
          "response": []
        },
        {
          "name": "Update User Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Doe\",\n  \"location\": \"New York, USA\",\n  \"timezone\": \"America/New_York\",\n  \"bio\": \"Software developer with 5 years of experience\",\n  \"language\": \"en-US\",\n  \"notificationSettings\": {\n    \"emailNotifications\": true,\n    \"pushNotifications\": true,\n    \"taskReminders\": true,\n    \"weeklyDigest\": false\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/user/profile",
              "host": ["{{baseUrl}}"],
              "path": ["user", "profile"]
            },
            "description": "Update the authenticated user's profile"
          },
          "response": []
        }
      ],
      "description": "User management endpoints"
    },
    {
      "name": "Tags",
      "item": [
        {
          "name": "Get All Tags",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/tags",
              "host": ["{{baseUrl}}"],
              "path": ["tags"]
            },
            "description": "Get all tags"
          },
          "response": []
        }
      ],
      "description": "Tag management endpoints"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080/v1",
      "type": "string"
    },
    {
      "key": "token",
      "value": "your-jwt-token-here",
      "type": "string"
    }
  ]
}
